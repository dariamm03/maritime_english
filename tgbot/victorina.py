import telebot
import pymysql
from telebot import types
import random
import time
from config import host, user, password, db_name

try:
    connection = pymysql.connect(
        host=host,
        port=3306,
        user=user,
        password=password,
        database=db_name,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        cursor = connection.cursor()
        def get_question(index):
            question = f"SELECT text FROM questions WHERE id = {index}"
            cursor.execute(question)
            query_result = cursor.fetchall()
            for res in query_result:
                return res['text']


        def get_answer(index, variant):
            query = f"SELECT {variant} FROM answers WHERE question_code = {index}"
            with connection.cursor() as cursor:
                cursor.execute(query)
                result = cursor.fetchone()
                return result[variant]


        def get_correct(index):
            with connection.cursor() as cursor:
                query = f"SELECT correct FROM questions WHERE questions.id = {index}"
                cursor.execute(query)
                query_result = cursor.fetchall()
                for res in query_result:
                    return res['correct']

        def next_question(message, index, points):
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(types.KeyboardButton(get_answer(index, 'a')),
                       types.KeyboardButton(get_answer(index, 'b')),
                       types.KeyboardButton(get_answer(index, 'c')),
                       types.KeyboardButton(get_answer(index, 'd')))
            bot.send_message(message.chat.id, f'{get_question(index)}', reply_markup=markup)



        bot = telebot.TeleBot("6292455306:AAHgBcHGVwIOFIz1bPsNH-aG3EGY6YXdceA")
        index = 1
        points = 0

        words1 = ["–û—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!", "–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!", "–ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ", "–ú–æ–ª–æ–¥–µ—Ü!", "–£ —Ç–µ–±—è —Ö–æ—Ä–æ—à–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è"]
        random1 = random.choice(words1)

        words2 = ["–û—Ç–≤–µ—Ç –ù–ï–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!", "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É —Ç–µ–±—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ", "–£ —Ç–µ–±—è –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å", "–ù–∞ —ç—Ç–æ—Ç —Ä–∞–∑ —É —Ç–µ–±—è –Ω–µ –≤—ã—à–ª–æ", "–ë—É–¥—å –≤–Ω–∏–º–∞—Ç–∏–ª—å–Ω–µ–µ"]
        random1_ = random.choice(words2)


        def start_quiz(message):
            global index, points
            index = 1
            points = 0
            next_question(message, index, points)  # –ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É, –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—è –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å


        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        def next_question(message, index, points):
            question = get_question(index)  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            buttons = [get_answer(index, 'a'), get_answer(index, 'b'), get_answer(index, 'c'), get_answer(index, 'd')] # –ü–æ–ª—É—á–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            for button_text in buttons:
                markup.add(types.KeyboardButton(button_text))
            bot.send_message(message.chat.id, question, reply_markup=markup)

            # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é

        def send_main_menu(message):
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('–û–±—É—á–µ–Ω–∏–µüß†')
            item2 = types.KeyboardButton('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µüìù')
            item3 = types.KeyboardButton('–û–±—â–µ–Ω–∏–µüó£')
            item4 = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º')
            markup.add(item1, item2, item3, item4)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)



        @bot.message_handler(func=lambda message:message.text != '–û–±—É—á–µ–Ω–∏–µüß†' and message.text != '–û–±—â–µ–Ω–∏–µüó£' and message.text != '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º' and message.text != '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µüìù' and message.text != '–ü—Ä–æ–ø—É—Å–∫–∏')
        def handle_answer(message):
            global index, points
            if message.text == '–í—ã–±–æ—Ä –æ—Ç–≤–µ—Ç–∞':
                next_question(message, index, points)
            if index < 5:
                correct_answer = get_correct(index)
                if message.text == get_answer(index, 'a') or message.text == get_answer(index,'b') or message.text == get_answer(index, 'c') or message.text == get_answer(index, 'd'):
                    if message.text == correct_answer:  # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
                        points += 1
                        bot.send_message(message.chat.id, random1)
                    else:
                        bot.send_message(message.chat.id, random1_)
                        bot.send_message(message.chat.id, f"–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}")
                    index += 1
                    next_question(message, index, points)
                else:
                    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç –∏–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
            else:  # –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
                correct_answer = get_correct(index)
                if message.text == correct_answer:  # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
                    points += 1
                    bot.send_message(message.chat.id, random1)
                else:
                    bot.send_message(message.chat.id, random1_)
                    bot.send_message(message.chat.id, f"–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}")
                bot.send_message(message.chat.id, "–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –æ–∫–æ–Ω—á–µ–Ω–∞")
                bot.send_message(message.chat.id, f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {points}")
                # –°–±—Ä–æ—Å–∏—Ç—å –∏–Ω–¥–µ–∫—Å –∏ –æ—á–∫–∏ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã —Å–Ω–æ–≤–∞
                index = 1
                points = 0
                send_main_menu(message)

    finally:
        connection.close()
        print("successfully connected...")

except Exception as ex:
    print("Connecting refused...")
    print(ex)